version: '3.8'

services:
  tts-api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: tts-api-brazil
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
      - MODEL_NAME=Alissonerdx/Dia1.6-pt_BR-v1
      - DEFAULT_SAMPLE_RATE=22050
      - MAX_TEXT_LENGTH=1000
      - HOST=0.0.0.0
      - PORT=5000
    volumes:
      - ./logs:/app/logs
      - model_cache:/home/app/.cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: tts-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl:ro
    depends_on:
      - tts-api
    restart: unless-stopped
    profiles:
      - production

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: tts-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    profiles:
      - production

  # Prometheus para monitoramento (opcional)
  prometheus:
    image: prom/prometheus
    container_name: tts-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana para visualização (opcional)
  grafana:
    image: grafana/grafana
    container_name: tts-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  model_cache:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: tts-network